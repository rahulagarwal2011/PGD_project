name: 🚀 PGD Project CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.10"

    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v3

    - name: ⚡ Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run unit tests with Pytest
      run: |
        pip install pytest
        mkdir -p tests
        echo "def test_placeholder(): assert True" > tests/test_placeholder.py      
        pytest tests/ --junitxml=pytest-results.xml
      continue-on-error: false

    - name: 📄 Upload Pytest Results as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results
        path: pytest-results.xml

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: 🐳 Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: 🐳 Build Docker image
      run: |
        docker build --cache-from=type=local,src=/tmp/.buildx-cache \
                     --cache-to=type=local,dest=/tmp/.buildx-cache-new \
                     -t pgd_project:latest .

    - name: 🔄 Move new cache into place
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: 📏 Docker image size
      run: |
        docker images pgd_project:latest

    - name: 🧹 Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Optional: Push Docker image to registry
    # - name: 🔐 Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: 📤 Push Docker image
    #   run: |
    #     docker tag pgd_project:latest yourusername/pgd_project:latest
    #     docker push yourusername/pgd_project:latest

